{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { db } from \"../database/firebase\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar UserDetail = function UserDetail(props) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  useEffect(function _callee() {\n    var userRef, userSnap;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            userRef = doc(db, \"users\", props.route.params.userId);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(getDoc(userRef));\n\n          case 3:\n            userSnap = _context.sent;\n\n            if (userSnap.exists()) {\n              setUser(userSnap.data());\n            }\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n  console.log(user);\n  return _jsx(View, {\n    children: _jsx(Text, {\n      children: props.route.params.userId\n    })\n  });\n};\n\nexport default UserDetail;","map":{"version":3,"sources":["/Users/marcocastillo/htdocs/react-native-firebase-crud/screens/UserDetail.js"],"names":["React","useState","useEffect","db","doc","getDoc","UserDetail","props","user","setUser","userRef","route","params","userId","userSnap","exists","data","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,EAAT;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,oBAA5B;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC5B,kBAAwBN,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOO,IAAP;AAAA,MAAaC,OAAb;;AAEAP,EAAAA,SAAS,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACFQ,YAAAA,OADE,GACQN,GAAG,CAACD,EAAD,EAAK,OAAL,EAAcI,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC,MAAjC,CADX;AAAA;AAAA,6CAEeR,MAAM,CAACK,OAAD,CAFrB;;AAAA;AAEFI,YAAAA,QAFE;;AAIR,gBAAIA,QAAQ,CAACC,MAAT,EAAJ,EAAuB;AACrBN,cAAAA,OAAO,CAACK,QAAQ,CAACE,IAAT,EAAD,CAAP;AACD;;AANO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD,EAON,EAPM,CAAT;AASAC,EAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AAEA,SACE,KAAC,IAAD;AAAA,cACE,KAAC,IAAD;AAAA,gBAAOD,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC;AAA1B;AADF,IADF;AAKD,CAnBD;;AAqBA,eAAeP,UAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { View, Text } from \"react-native\";\nimport { db } from \"../database/firebase\";\nimport { doc, getDoc } from \"firebase/firestore\";\n\nconst UserDetail = (props) => {\n  const [user, setUser] = useState({});\n\n  useEffect(async () => {\n    const userRef = doc(db, \"users\", props.route.params.userId);\n    const userSnap = await getDoc(userRef);\n\n    if (userSnap.exists()) {\n      setUser(userSnap.data());\n    }\n  }, []);\n\n  console.log(user);\n\n  return (\n    <View>\n      <Text>{props.route.params.userId}</Text>\n    </View>\n  );\n};\n\nexport default UserDetail;\n"]},"metadata":{},"sourceType":"module"}