{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { db } from \"../database/firebase\";\nimport { collection, doc, setDoc, onSnapshot, deleteDoc } from \"firebase/firestore\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CreateUser = function CreateUser() {\n  var _useState = useState({\n    username: \"\",\n    email: \"\",\n    phone: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      form = _useState2[0],\n      setForm = _useState2[1];\n\n  var handleInputChange = function handleInputChange(input, value) {\n    setForm(_objectSpread(_objectSpread({}, form), {}, _defineProperty({}, input, value)));\n  };\n\n  var createNewUser = function createNewUser() {\n    var userRef;\n    return _regeneratorRuntime.async(function createNewUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(form.username === \"\" || form.email === \"\" || form.phone === \"\")) {\n              _context.next = 4;\n              break;\n            }\n\n            alert(\"Provide full info\");\n            _context.next = 8;\n            break;\n\n          case 4:\n            userRef = collection(db, \"users\");\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(setDoc(doc(userRef), form));\n\n          case 7:\n            alert(\"User created!\");\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(ScrollView, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.inputGroup,\n      children: _jsx(TextInput, {\n        placeholder: \"Username\",\n        onChangeText: function onChangeText(value) {\n          return handleInputChange(\"username\", value);\n        }\n      })\n    }), _jsx(View, {\n      style: styles.inputGroup,\n      children: _jsx(TextInput, {\n        placeholder: \"Email\",\n        onChangeText: function onChangeText(value) {\n          return handleInputChange(\"email\", value);\n        }\n      })\n    }), _jsx(View, {\n      style: styles.inputGroup,\n      children: _jsx(TextInput, {\n        placeholder: \"Phone\",\n        onChangeText: function onChangeText(value) {\n          return handleInputChange(\"phone\", value);\n        }\n      })\n    }), _jsx(View, {\n      style: styles.inputGroup,\n      children: _jsx(Button, {\n        title: \"Save User\",\n        onPress: createNewUser\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 35\n  },\n  inputGroup: {\n    flex: 1,\n    padding: 0,\n    marginBottom: 15,\n    borderBottomColor: \"#cccccc\"\n  }\n});\nexport default CreateUser;","map":{"version":3,"sources":["/Users/marcocastillo/htdocs/react-native-firebase-crud/screens/CreateUser.js"],"names":["React","useState","db","collection","doc","setDoc","onSnapshot","deleteDoc","CreateUser","username","email","phone","form","setForm","handleInputChange","input","value","createNewUser","alert","userRef","styles","container","inputGroup","StyleSheet","create","flex","padding","marginBottom","borderBottomColor"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { View, Button, TextInput, ScrollView, StyleSheet } from \"react-native\";\nimport { db } from \"../database/firebase\";\nimport {\n  collection,\n  doc,\n  setDoc,\n  onSnapshot,\n  deleteDoc,\n} from \"firebase/firestore\";\n\nconst CreateUser = () => {\n  const [form, setForm] = useState({\n    username: \"\",\n    email: \"\",\n    phone: \"\",\n  });\n\n  const handleInputChange = (input, value) => {\n    setForm({\n      ...form,\n      [input]: value,\n    });\n  };\n\n  const createNewUser = async () => {\n    if (form.username === \"\" || form.email === \"\" || form.phone === \"\") {\n      alert(\"Provide full info\");\n    } else {\n      const userRef = collection(db, \"users\");\n      await setDoc(doc(userRef), form);\n      alert(\"User created!\");\n    }\n  };\n\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.inputGroup}>\n        <TextInput\n          placeholder=\"Username\"\n          onChangeText={(value) => handleInputChange(\"username\", value)}\n        />\n      </View>\n      <View style={styles.inputGroup}>\n        <TextInput\n          placeholder=\"Email\"\n          onChangeText={(value) => handleInputChange(\"email\", value)}\n        />\n      </View>\n      <View style={styles.inputGroup}>\n        <TextInput\n          placeholder=\"Phone\"\n          onChangeText={(value) => handleInputChange(\"phone\", value)}\n        />\n      </View>\n      <View style={styles.inputGroup}>\n        <Button title=\"Save User\" onPress={createNewUser} />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 35,\n  },\n\n  inputGroup: {\n    flex: 1,\n    padding: 0,\n    marginBottom: 15,\n    borderBottomColor: \"#cccccc\",\n  },\n});\n\nexport default CreateUser;\n"]},"metadata":{},"sourceType":"module"}